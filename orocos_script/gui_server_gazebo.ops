#!/usr/bin/env deployer

import("eigen_typekit")
import("kdl_typekit")
import("rst-rt_typekit")
import("rtt_rsbcomm")
import("rtt_gazebo_embedded")
require("os")

## EXTRA FOR ROS
import("rtt_ros")
import("rtt_rosnode")
import("rtt_sensor_msgs")
import("orocos_ros_joint_state_publisher")
import("ros_orocos_joints_gui")
##


loadComponent("gazebo","RTTGazeboEmbedded")

setActivity("gazebo",0,10,ORO_SCHED_OTHER)

gazebo.argv = strings("--verbose","-s /orocos/gnulinux/rtt_gazebo_system/librtt_gazebo_system.so")

gazebo.configure()

gazebo.start()

gazebo.toggleDynamicsSimulation(false)

gazebo.spawn_model("coman", "model://iit-coman", 20)

import("rtt-gazebo-robot-sim")

loadComponent("coman","cogimon::robotSim")
setActivity("coman",0,11,ORO_SCHED_OTHER)

var string urdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/robots/cogimon-gazebo-models/iit-coman/model.urdf"
var string srdf_path = os.getenv("ROBOTOLOGY_ROOT") + "/robots/cogimon-gazebo-models/iit-coman/coman.srdf"
coman.loadURDFAndSRDF(urdf_path, srdf_path)
coman.getModel("coman")
coman.configure()

gazebo.toggleDynamicsSimulation(true)

## OROCOS_ROS_JOINT_STATE_PUBLISHER
loadComponent("coman_ros_joint_state_publisher","orocos_ros_joint_state_publisher")

addPeer("coman_ros_joint_state_publisher", "coman")
coman_ros_joint_state_publisher.attachToRobot("coman")
coman_ros_joint_state_publisher.loadURDFAndSRDF(urdf_path,srdf_path)
coman_ros_joint_state_publisher.configure()
coman_ros_joint_state_publisher.start()

## GUI_SERVER
loadComponent("gui_server","ros_orocos_joints_gui_server")

addPeer("gui_server", "coman")
gui_server.attachToRobot("coman")
gui_server.configure()
gui_server.start()
